<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qc.wework.chatdata.mapper.ChatDataMapper">

    <resultMap type="com.qc.wework.chatdata.dto.ChatDataItem" id="ChatDataItemMap">
        <id property="id" column="id" />
        <result property="seq" column="seq" jdbcType="INTEGER"/>
        <result property="publickey_ver" column="public_key_ver" jdbcType="VARCHAR"/>
        <result property="encrypt_random_key" column="encrypt_random_key" jdbcType="LONGVARCHAR"/>
        <result property="encrypt_chat_msg" column="encrypt_chat_msg" jdbcType="LONGVARCHAR"/>
        <result property="creationDate" column="creation_date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--<resultMap type="com.qc.wework.chatdata.dto.ChatDataItemContent" id="ChatDataItemContentMap">-->
        <!--<id property="id" column="id" />-->
        <!--<result property="history_id" column="history_id" jdbcType="INTEGER"/>-->
        <!--<result property="msgid" column="msgid" jdbcType="VARCHAR"/>-->
        <!--<result property="action" column="encrypt_random_key" jdbcType="VARCHAR"/>-->
        <!--<result property="from" column="from" jdbcType="VARCHAR"/>-->
        <!--<result property="tolist" column="tolist" jdbcType="VARCHAR"/>-->
        <!--<result property="roomid" column="roomid" jdbcType="VARCHAR"/>-->
        <!--<result property="msgtime" column="msgtime" jdbcType="TIMESTAMP"/>-->
        <!--<result property="msgtype" column="msgtype" jdbcType="VARCHAR"/>-->
        <!--<result property="content" column="content" jdbcType="LONGVARCHAR"/>-->
    <!--</resultMap>-->

    <resultMap type="com.qc.wework.chatdata.dto.ChatDataParsed" id="MediaContentMap">
        <id property="id" column="id" />
        <result property="history_id" column="history_id" jdbcType="INTEGER"/>
        <result property="msgid" column="msgid" jdbcType="VARCHAR"/>
        <result property="action" column="encrypt_random_key" jdbcType="VARCHAR"/>
        <result property="msgtype" column="msgtype" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <insert id="insertChatDataItem">
        insert into chat_data_history (seq, msgid, public_key_ver, encrypt_random_key, encrypt_chat_msg)
        values
        <foreach collection="chatDataItemList" item="item" separator=",">
            (#{item.seq}, #{item.msgid}, #{item.publickey_ver}, #{item.encrypt_random_key}, #{item.encrypt_chat_msg})
        </foreach>
    </insert>

    <insert id="insertChatDataParsed">
        insert into chat_data_parsed (history_id, msgid, `action`, `msgtype`, roomid, msgtime, msg, content)
        values
        <foreach collection="chatDataParsedList" item="item" separator=",">
            (#{item.history_id}, #{item.msgid}, #{item.action}, #{item.msgtype}, #{item.roomid}, #{item.msgtime}, #{item.msg}, #{item.content})
        </foreach>
    </insert>

    <update id="updateChatDataMedia">
        update chat_data_parsed
        set media_url=#{mediaUrl}, extra_media=1, msg=#{mediaUrl}
        where history_id = #{historyId}
    </update>

    <select id="getLatestSeq" resultType="java.lang.Integer">
        select
         seq
        from chat_data_history
        order by seq desc
        limit 1
    </select>

    <select id="getLatestParsedIdOfChatData" resultType="java.lang.Integer">
        select
        history_id
        from chat_data_parsed
        order by history_id desc
        limit 1
    </select>

    <select id="getUnParseChatDataItem" resultMap="ChatDataItemMap">
        select
        *
        from chat_data_history
        where id > #{historyId}
        limit #{limit}
    </select>

    <select id="getLatestParsedIdOfMediaData" resultType="java.lang.Integer">
        select
        history_id
        from chat_data_parsed
        where extra_media=1
        <if test="mediaTypes.size() > 0">
            and msgtype in
            <foreach collection="mediaTypes" item="mt" separator="," open="(" close=")">
                #{mt}
            </foreach>
        </if>

        order by history_id desc
        limit 1
    </select>

    <select id="getUnParseMediaItem" resultMap="MediaContentMap">
        select
        *
        from chat_data_parsed
        where history_id > #{historyId} and extra_media=0
        <if test="mediaTypes.size() > 0">
            and msgtype in
            <foreach collection="mediaTypes" item="mt" separator="," open="(" close=")">
                #{mt}
            </foreach>
        </if>
        limit #{limit}
    </select>
    
    <select id="getChatDataParsedByHistoryId" resultMap="MediaContentMap">
        select * from chat_data_parsed
        where history_id=#{historyId}
    </select>









</mapper>